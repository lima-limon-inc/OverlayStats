<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="project">
		<email>haskell@gentoo.org</email>
		<name>Gentoo Haskell</name>
	</maintainer>
	<use>
		<flag name="executables">Install executables</flag>
	</use>
	<longdescription>
		This package provides tools for managing PostgreSQL servers that live in local folders and communicate via a Unix domain socket. It uses the &lt;https://hackage.haskell.org/package/gargoyle gargoyle&gt; package in order to automatically initialize, spin up, and spin down such servers according to client demand.
		
		The `gargoyle-psql` executable is such a client which will try to connect to a PostgreSQL server at a given location:
		
		&gt; gargoyle-psql db
		
		&gt; psql (9.5.6)
		&gt; Type &quot;help&quot; for help.
		&gt;
		&gt; postgres=#
		
		Note that `gargoyle-psql` assumes that PostgreSQL executables such as `psql` are available on the PATH. A custom &#39;Gargoyle&#39; is required to use non-standard PostgreSQL installations.
		
		The following is an example of using this package to run &lt;https://hackage.haskell.org/package/postgresql-simple postgresql-simple&gt; actions using a local DB:
		
		&gt; import Database.PostgreSQL.Simple
		&gt; import Gargoyle
		&gt; import Gargoyle.PostgreSQL
		&gt;
		&gt; withDb :: String -&gt; (Connection -&gt; IO a) -&gt; IO a
		&gt; withDb dbPath a = withGargoyle defaultPostgres dbPath $ \dbUri -&gt; a =&lt;&lt; connectPostgreSQL dbUri
	</longdescription>
</pkgmetadata>
