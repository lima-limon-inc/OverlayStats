<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>lssndrbarbieri@gmail.com</email>
		<name>Alessandro Barbieri</name>
	</maintainer>
	<use>
		<flag name="av-map">enable av-map instead of av-table in the OFI transport</flag>
		<flag name="bounce-buffers">Enable bounce buffers by default</flag>
		<flag name="cma">Use cross-memory attach for on-node communication</flag>
		<flag name="completion-polling">Enable polling in quiet, fence, and local completion operations</flag>
		<flag name="cxx">Enable C++ bindings</flag>
		<flag name="error-checking">Enable error checking in SHMEM calls.  This will increase the overhead of communication operations.</flag>
		<flag name="fortran">Enable fortran bindings</flag>
		<flag name="long-fortran-header">Enable long Fortran header, including all function declarations</flag>
		<flag name="manual-progress">Enable intermittent progress calls inside transport layer</flag>
		<flag name="memcpy">Use memcpy to perform local put/get operations</flag>
		<!--<flag name="nonblocking-fence">By default, shmem_fence() is equivalent to shmem_quiet(), which can be a lengthy operation.  Enabling this feature results in the ordering point being moved from the shmem_fence() to the next put-like call, which can help improve overlap in some cases.</flag>-->
		<flag name="ofi">Use libfabric as transport layer</flag>
		<flag name="ofi-fence">Use FI_FENCE feature to optimize put-with-signal operations</flag>
		<flag name="pmi">Use MPI for process management</flag>	
		<flag name="portals4">Use portals4 as transport layer</flag>
		<flag name="profiling">Enable profiling (pshmem) interface</flag>
		<flag name="pthread-mutexes">Use pthread mutexes instead of internal queueing locks</flag>
		<flag name="remote-virtual-addressing"> Enable optimizations assuming the symmetric heap is always symmetric with regards to virtual address. This may cause applications to abort during shmem_init() if such a symmetric heap can not be created, but will reduce the instruction count for some operations. This optimization also requires that the Portals 4 implementation support BIND_INACCESSIBLE on LEs.  This optimization will reduce the overhead of communication calls.</flag>
		<flag name="thread-completion">Support SHMEM_THREAD_MULTIPLE in OFI transport using FI_THREAD_COMPLETION thread safety model instead of FI_THREAD_SAFE</flag>
		<flag name="threads">Enable threading support</flag>
		<flag name="ucx">Use ucx transport</flag>
		<flag name="xpmem">Use xpmem transport</flag>
	</use>
	<upstream>
		<bugs-to>https://github.com/Sandia-OpenSHMEM/SOS/issues</bugs-to> 
		<remote-id type="github">Sandia-OpenSHMEM/SOS</remote-id>
	</upstream>
</pkgmetadata>
