<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>lssndrbarbieri@gmail.com</email>
		<name>Alessandro Barbieri</name>
	</maintainer>
	<longdescription lang="en">
A dynamic instrumentation package to trace programs compiled and run with the shared 
memory model (like OpenMP and pthreads), the message passing (MPI) programming model or 
both programming models (different MPI processes using OpenMP or pthreads within each MPI 
process). Extrae generates trace files that can be later visualized with sys-cluster/paraver.
	</longdescription>
	<upstream>
		<bugs-to>https://github.com/bsc-performance-tools/extrae/issues</bugs-to>
		<remote-id type="github">bsc-performance-tools/extrae</remote-id>
	</upstream>
	<use>
		<!--<flag name="aspectj">Enable support for tracing Java through <pkg>dev-java/aspectj</pkg> (experimental)</flag>-->
		<flag name="clustering">Enable <pkg>sys-cluster/clusteringsuite</pkg> support</flag>
		<!--<flag name="cuda">Enable support for tracing CUDA calls on nVidia hardware and needs to point to the CUDA SDK installation path. This instrumentation is only valid in binaries that use the shared version of the CUDA library.</flag>-->
		<!--<flag name="cupti">CUPTI is used to instrument CUDA calls</flag>-->
		<flag name="doc">Generates the documentation of this instrumentation package</flag>
		<flag name="dlsym">Use dlsym instead of PMPI</flag>
		<flag name="dyninst">Build with <pkg>dev-libs/dyninst</pkg></flag>
		<flag name="heterogeneous">Enable support for heterogeneous tracing</flag>
		<flag name="inotify">Enable inotify support</flag>
		<flag name="java">Enable support for tracing Java. This is necessary to create the connectors between |TRACE| and Java applications.</flag>
		<flag name="memkind">Enable <pkg>dev-libs/memkind</pkg> support</flag>
		<flag name="merge-in-trace">Embed the merging process in the tracing library so the final tracefile can be generated automatically from the application run</flag>
		<flag name="nanos">Enable support for tracing <pkg>sys-cluster/nanos6</pkg> run-time</flag>
		<flag name="online">Enable on-line analysis</flag>
		<flag name="opencl">Enable support for tracing OpenCL</flag>
		<flag name="openmp">Enable support for tracing OpenMP</flag>
		<flag name="openshmem">OpenSHMEM to be used for the instrumentation package</flag>
		<flag name="parallel-merge">Build the parallel mergers (mpimpi2prv/mpimpi2dim) based on MPI</flag>
		<flag name="pebs-sampling">enable PEBS sampling</flag>
		<flag name="peruse">Enable gathering information with PerUse</flag>
		<flag name="posix-clock">Use POSIX clock (clock_gettime call) instead of low level timing routines. Use this option if the system where you install the instrumentation package modifies the frequency of its processors at runtime.</flag>
		<flag name="pthread">Enable support for tracing pthread library</flag>
		<flag name="sampling">Enable <pkg>dev-libs/papi</pkg> sampling support</flag>
		<flag name="spectral">This package enables support for on-line <pkg>sys-cluster/spectral</pkg> analysis.</flag>
		<flag name="single-mpi-lib">Produces a single instrumentation library for MPI that contains both Fortran and C wrappers. Applications that call the MPI library from both C and Fortran languages need this flag to be enabled.</flag>
		<flag name="sionlib">Enable support for <pkg>sys-cluster/sionlib</pkg></flag>
		<flag name="smpss">Enable support for tracing SMP-superscalar</flag>
		<flag name="xml">Enable support for XML configuration</flag>
	</use>
</pkgmetadata>
