--- a/Ayudame/configure.ac
+++ b/Ayudame/configure.ac
@@ -22,8 +22,8 @@
 # determine OS to set eg linker flags; yields variables host_os, host_vendor, and host_cpu
 AC_CANONICAL_HOST
 #echo "***************${host_os}"
-AM_CONDITIONAL([HAVE_LINUX], test "${host_os/linux}" != "$host_os")
-AM_CONDITIONAL([HAVE_APPLE], test "${host_os/darwin}" != "$host_os")
+AM_CONDITIONAL([HAVE_LINUX], test "linux" = "$host_os")
+AM_CONDITIONAL([HAVE_APPLE], test "darwin" = "$host_os")
 
 # from Kailai's version:
 #AC_CONFIG_MACRO_DIR([m4])
--- a/Ayudame/m4/ompss_plugin.m4
+++ b/Ayudame/m4/ompss_plugin.m4
@@ -32,7 +32,7 @@
     # test if OmpSs headers usuable; this is a hack
     AC_LANG_PUSH([C++])    # switch to C++
     CPPFLAGS_SAVE=$CPPFLAGS
-    CPPFLAGS+=" -Ishould_not_be_here -I$with_ompss/include/nanox-dev -include"new_decl.hpp""
+    CPPFLAGS="${CPPFLAGS} -Ishould_not_be_here -I$with_ompss/include/nanox-dev -include"new_decl.hpp""
     AC_CHECK_HEADER([plugin.hpp], [enable_ompss_plugin="yes"], [enable_ompss_plugin="no"]) # this does not seem to work with gxx
     CPPFLAGS=$CPPFLAGS_SAVE
     # check for c++11 compiler
@@ -41,13 +41,13 @@
   ])
   AM_CONDITIONAL(ENABLE_OMPSS_PLUGIN, test "$enable_ompss_plugin" != "no")	
   
-  AS_IF([test "$enable_ompss_plugin" == "yes"], [
+  AS_IF([test "$enable_ompss_plugin" = "yes"], [
     #  try to find APIs for getting number of threads/workers
     AC_LANG_PUSH([C++])    # switch to C++
     CXXFLAGS_SAVE=$CXXFLAGS
     CPPFLAGS_SAVE=$CPPFLAGS
-    CPPFLAGS+=" -Ishould_not_be_here2 -I$with_ompss/include/nanox-dev "
-    CXXFLAGS+=" -std=c++03 "
+    CPPFLAGS="${CPPFLAGS} -Ishould_not_be_here2 -I$with_ompss/include/nanox-dev "
+    CXXFLAGS="${CXXFLAGS} -std=c++03 "
     # 
     AC_COMPILE_IFELSE(
        [ AC_LANG_PROGRAM([#include <system.hpp>],
