--- a/include/seqUtils.h
+++ b/include/seqUtils.h
@@ -30,7 +30,7 @@
    * The routine runs fastest with a uniform distribution of elements.
    * The vector l is declare dynamically using the calloc function.
    * The variable ctr counts the number of times that flashsort is called.
-   * THRESHOLD is a very important constant.  It is the minimum number of 
+   * USORT_THRESHOLD is a very important constant.  It is the minimum number of 
    * elements required in a subclass before recursion is used. 
    *
    * Templated version of flashsort based on original C code by 
--- a/include/seqUtils.tcc
+++ b/include/seqUtils.tcc
@@ -121,7 +121,7 @@
   template <typename T>
     void flashsort(T* a, int n, int m, int *ctr)
     {
-      const int THRESHOLD = 75;
+      const int USORT_THRESHOLD = 75;
       const int CLASS_SIZE = 75;     /* minimum value for m */
 
       /* declare variables */
@@ -192,7 +192,7 @@
         /**** Choice of RECURSION or STRAIGHT INSERTION *****/
 
         for (k=0;k<(m-1);k++)
-          if ( (nx = l[k+1]-l[k]) > THRESHOLD )  /* then use recursion */
+          if ( (nx = l[k+1]-l[k]) > USORT_THRESHOLD )  /* then use recursion */
           {
             flashsort(&a[l[k]+1],nx,CLASS_SIZE,ctr);
             (*ctr)++;
