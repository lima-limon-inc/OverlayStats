--- ./upnp/inc/upnp.h	2013-11-15 16:01:35.000000000 +0000
+++ upnp.h	2015-12-25 10:53:28.674015101 +0000
@@ -52,7 +52,7 @@
  */
 #ifdef WIN32
 	#include <time.h>
-	#ifdef UPNP_USE_MSVCPP
+	#if defined(UPNP_USE_MSVCPP) || defined(UPNP_USE_BCBPP)
 		#include <sys/types.h>	/* needed for off_t */
 	#endif
 #elif (defined(BSD) && BSD >= 199306)
@@ -67,9 +67,10 @@
 #define MODL_NAME_SIZE  32
 #define SERL_NUMR_SIZE  64
 #define MODL_DESC_SIZE  64
-#define UPNP_INFINITE		-1
-#define UPNP_USING_CHUNKED	-3
-#define UPNP_UNTIL_CLOSE	-4
+#define UPNP_INFINITE			-1
+#define UPNP_USING_CHUNKED_200	-2
+#define UPNP_USING_CHUNKED		-3
+#define UPNP_UNTIL_CLOSE		-4
 
 /*!
  * \name Error codes 
@@ -799,6 +800,16 @@
 
 };
 
+struct Extra_Headers
+{
+	/** The length of the file. A length less than 0 indicates the size
+	*  is unknown, and data will be sent until 0 bytes are returned from
+	*  a read call. */
+	char *name;
+	char *value;
+	DOMString resp;
+};
+
 struct File_Info
 {
 	/** The length of the file. A length less than 0 indicates the size 
@@ -818,10 +829,15 @@
 	* a non-zero value. If unreadable, it should be set to 0. */
 	int is_readable;
 
-	/** The content type of the file. This string needs to be allocated 
-	*  by the caller using {\bf ixmlCloneDOMString}.  When finished 
+	/** The content type of the file. This string needs to be allocated
+	*  by the caller using {\bf ixmlCloneDOMString}.  When finished
 	*  with it, the SDK frees the {\bf DOMString}. */
 	DOMString content_type;
+
+	/** Headers to be modified / added. A modified response must be allocated
+	* by the caller using {\bf ixmlCloneDOMString}.  When finished with it,
+	* the SDK frees all of them. */
+	struct Extra_Headers *extra_headers;
 };
 #endif /* UPNP_VERSION < 10800 */
 
@@ -2678,7 +2694,7 @@
 /*!
  * \brief Sets the get_info callback function to be used to access a virtual
  * directory.
- * 
+ *
  * \return An integer representing one of the following:
  *       \li \c UPNP_E_SUCCESS: The operation completed successfully.
  *       \li \c UPNP_E_INVALID_ARGUMENT: \b callback is not a valid pointer.
@@ -2689,7 +2705,7 @@
  * \brief Open callback function prototype.
  */
 typedef UpnpWebFileHandle (*VDCallback_Open)(
-		/*! [in] The name of the file to open. */ 
+		/*! [in] The name of the file to open. */
 		const char *filename,
 		/*! [in] The mode in which to open the file.
 		 * Valid values are \c UPNP_READ or \c UPNP_WRITE. */
