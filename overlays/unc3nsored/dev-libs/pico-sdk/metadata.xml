<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <upstream>
    <maintainer>
      <name>Graham Sanderson</name>
      <email>graham.sanderson@raspberrypi.com</email>
    </maintainer>
    <maintainer>
      <name>Andrew Scheller</name>
      <email>andrew.scheller@raspberrypi.com</email>
    </maintainer>
    <bugs-to>https://github.com/raspberrypi/pico-sdk/isues</bugs-to>
    <remote-id type="github">raspberrypi/pico-sdk</remote-id>
  </upstream>
  <maintainer type="person">
    <email>xxc3ncoredxx@gmail.com</email>
    <name>Oskari Pirhonen</name>
  </maintainer>
  <longdescription>
    The Raspberry Pi Pico SDK (henceforth the SDK) provides the headers,
    libraries and build system necessary to write programs for the RP2040-based
    devices such as the Raspberry Pi Pico in C, C++ or assembly language.
    
    The SDK is designed to provide an API and programming environment that is
    familiar both to non-embedded C developers and embedded C developers alike.
    A single program runs on the device at a time and starts with a conventional
    `main()` method. Standard C/C++ libraries are supported along with C level
    libraries/APIs for accessing all of the RP2040's hardware include PIO
    (Programmable IO).
    
    Additionally the SDK provides higher level libraries for dealing with
    timers, synchronization, USB (TinyUSB) and multi-core programming along with
    various utilities.
    
    The SDK can be used to build anything from simple applications, to fully
    fledged runtime environments such as MicroPython, to low level software
    such as RP2040's on-chip bootrom itself.
    
    Additional libraries/APIs that are not yet ready for inclusion in the SDK
    can be found in [pico-extras](https://github.com/raspberrypi/pico-extras).
  </longdescription>
  <use>
    <flag name="usb">Provide USB support using TinyUSB</flag>
  </use>
</pkgmetadata>
