diff --git a/sound/pci/hda/cs35l41_hda.c b/sound/pci/hda/cs35l41_hda.c
index b5210abb5141..74fc49105611 100644
--- a/sound/pci/hda/cs35l41_hda.c
+++ b/sound/pci/hda/cs35l41_hda.c
@@ -1231,7 +1231,14 @@ static int cs35l41_no_acpi_dsd(struct cs35l41_hda *cs35l41, struct device *physd
 	cs35l41->index = id == 0x40 ? 0 : 1;
 	cs35l41->channel_index = 0;
 	cs35l41->reset_gpio = gpiod_get_index(physdev, NULL, 0, GPIOD_OUT_HIGH);
-	cs35l41->speaker_id = cs35l41_get_speaker_id(physdev, 0, 0, 2);
+	if (strncmp(hid, "CSC3551", 7) == 0 && strcmp(cs35l41->acpi_subsystem_id, "10431463") == 0) {
+		// TESTING (Hook for GA402XY)
+		dev_warn(cs35l41->dev, "ASUS didn't provide the needed ACPI _DSD properties for GA402XY series.");
+		dev_warn(cs35l41->dev, "Initializing CSC3551...");
+		cs35l41->speaker_id = cs35l41_get_speaker_id(physdev, 0, 0, 1);
+	} else {
+		cs35l41->speaker_id = cs35l41_get_speaker_id(physdev, 0, 0, 2);
+	}
 	hw_cfg->spk_pos = cs35l41->index;
 	hw_cfg->gpio2.func = CS35L41_INTERRUPT;
 	hw_cfg->gpio2.valid = true;
@@ -1243,6 +1250,17 @@ static int cs35l41_no_acpi_dsd(struct cs35l41_hda *cs35l41, struct device *physd
 		hw_cfg->bst_type = CS35L41_EXT_BOOST;
 		hw_cfg->gpio1.func = CS35l41_VSPK_SWITCH;
 		hw_cfg->gpio1.valid = true;
+	} else if (strncmp(hid, "CSC3551", 7) == 0 && strcmp(cs35l41->acpi_subsystem_id, "10431463") == 0) {
+		// TESTING (Hook for GA402XY)
+		dev_warn(cs35l41->dev, "Initializing unofficial device..");
+		// bass type (0x00: internal/0x01: external)
+		hw_cfg->bst_type = 0x01;
+		// setting function indices (unsure about GPIO_2)
+		hw_cfg->gpio1.func = 0x00;
+		hw_cfg->gpio2.func = 0x02;
+		// setting gpio's to true
+		hw_cfg->gpio1.valid = true;
+		hw_cfg->gpio2.valid = true;
 	} else {
 		/*
 		 * Note: CLSA010(0/1) are special cases which use a slightly different design.
